{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","name","setName","surname","setSurname","address","setAddress","description","setDescription","image","setImage","podnets","setPodnets","className","value","onChange","e","target","type","event","files","img","URL","createObjectURL","src","alt","onClick","newPodnet","map","podnet","podnetIndex","indexToRemove","newPodnets","filter","_podnet","rootElement","document","getElementById","render"],"mappings":"yKAEe,SAASA,IACtB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,mBAAS,IAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAsCN,mBAAS,IAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KACA,EAA0BR,mBAAc,MAAxC,mBAAOS,EAAP,KAAcC,EAAd,KAEA,EAA8BV,mBAAgB,CAC5C,CACEC,KAAM,aACNE,QAAS,gBACTE,QAAS,YACTE,YAAa,qBACbE,MAAO,4CAET,CACER,KAAM,QACNE,QAAS,aACTE,QAAS,aACTE,YACE,gEACFE,MAAO,8CAdX,mBAAOE,EAAP,KAAgBC,EAAhB,KAsDA,OACE,sBAAKC,UAAU,SAAf,UACE,oBAAIA,UAAU,gBAAd,gCAEA,oBAAIA,UAAU,UAEd,sBAAKA,UAAU,WAAf,UACE,uBAAOA,UAAU,GAAjB,kBACA,uBACEC,MAAOb,EACPc,SAAU,SAACC,GAAD,OAAOd,EAAQc,EAAEC,OAAOH,QAClCD,UAAU,GACVK,KAAK,SAGP,uBAAOL,UAAU,GAAjB,wBACA,uBACEC,MAAOX,EACPY,SAAU,SAACC,GAAD,OAAOZ,EAAWY,EAAEC,OAAOH,QACrCD,UAAU,GACVK,KAAK,SAGP,uBAAOL,UAAU,GAAjB,oBACA,uBACEC,MAAOT,EACPU,SAAU,SAACC,GAAD,OAAOV,EAAWU,EAAEC,OAAOH,QACrCD,UAAU,GACVK,KAAK,SAGP,uBAAOL,UAAU,GAAjB,mBACA,uBACEC,MAAOP,EACPQ,SAAU,SAACC,GAAD,OAAOR,EAAeQ,EAAEC,OAAOH,QACzCD,UAAU,GACVK,KAAK,SAGP,uBAAOL,UAAU,GAAjB,wBACA,uBACEA,UAAU,GACVK,KAAK,OACLjB,KAAK,UACLc,SA9Dc,SAACI,GACrB,GAAIA,EAAMF,OAAOG,OAASD,EAAMF,OAAOG,MAAM,GAAI,CAC/C,IAAMC,EAAMF,EAAMF,OAAOG,MAAM,GAC/BV,EAASY,IAAIC,gBAAgBF,IAE7BF,EAAMF,OAAOH,MAAQ,SA4DlBL,GAAS,qBAAKe,IAAKf,EAAOI,UAAU,iBAAiBY,IAAI,KAE1D,wBAAQC,QArFI,WAChB,IAAMC,EAAY,CAChB1B,OACAE,UACAE,UACAE,cACAE,SAGFP,EAAQ,IACRE,EAAW,IACXE,EAAW,IACXE,EAAe,IACfE,EAAS,IAETE,EAAW,GAAD,mBAAKD,GAAL,CAAcgB,MAsEQd,UAAU,gBAAtC,4BAKF,oBAAIA,UAAU,gBAAd,6BAEA,oBAAIA,UAAU,UAEd,qBAAKA,UAAU,gBAAf,SACGF,EAAQiB,KAAI,SAACC,EAAQC,GACpB,OACE,sBAAKjB,UAAU,SAAf,UACE,qBAAIA,UAAU,gBAAd,UACG,IACAgB,EAAO5B,KAFV,IAEiB4B,EAAO1B,QAFxB,KAEmC0B,EAAOxB,QAF1C,KAEqD,OAErD,oBAAGQ,UAAU,cAAb,cAA6BgB,EAAOtB,YAApC,OAEA,qBAAKiB,IAAKK,EAAOpB,MAAOI,UAAU,iBAAiBY,IAAI,KAEvD,wBACEC,SAhFQK,EAgFcD,EA/E3B,WACL,IAAME,EAAarB,EAAQsB,QACzB,SAACC,EAASJ,GAAV,OAA0BA,IAAgBC,KAE5CnB,EAAWoB,KA4EDnB,UAAU,iBAFZ,0BAOA,oBAAIA,UAAU,aAtFL,IAACkB,UClDxB,IAAMI,EAAcC,SAASC,eAAe,QAC5CC,iBAAO,cAACvC,EAAD,IAASoC,K","file":"static/js/main.87da0452.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nexport default function App() {\n  const [name, setName] = useState(\"\");\n  const [surname, setSurname] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [image, setImage] = useState<any>(null);\n\n  const [podnets, setPodnets] = useState<any[]>([\n    {\n      name: \"Peťko\",\n      surname: \"Mrkvička\",\n      address: \"Adresa 27\",\n      description: \"Lorem ipsum dolor?\",\n      image: \"https://picsum.photos/seed/matej/300/200\"\n    },\n    {\n      name: \"Milan\",\n      surname: \"Novotný\",\n      address: \"Adresa 455\",\n      description:\n        \"consectetur adipiscing elit, sed do eiusmod tempor incididunt\",\n      image: \"https://picsum.photos/seed/jakub/300/200\"\n    }\n  ]);\n\n  const addPodnet = () => {\n    const newPodnet = {\n      name,\n      surname,\n      address,\n      description,\n      image\n    };\n\n    setName(\"\");\n    setSurname(\"\");\n    setAddress(\"\");\n    setDescription(\"\");\n    setImage(\"\");\n\n    setPodnets([...podnets, newPodnet]);\n  };\n\n  const onImageChange = (event: any) => {\n    if (event.target.files && event.target.files[0]) {\n      const img = event.target.files[0];\n      setImage(URL.createObjectURL(img));\n\n      event.target.value = null;\n    }\n  };\n\n  const removePodnet = (indexToRemove: number) => {\n    return () => {\n      const newPodnets = podnets.filter(\n        (_podnet, podnetIndex) => podnetIndex !== indexToRemove\n      );\n      setPodnets(newPodnets);\n    };\n  };\n\n  return (\n    <div className=\"holder\">\n      <h1 className=\"nadpis_pridaj\">Pridať podnet</h1>\n\n      <hr className=\"ciara\" />\n\n      <div className=\"formular\">\n        <label className=\"\">Meno</label>\n        <input\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          className=\"\"\n          type=\"text\"\n        />\n\n        <label className=\"\">Priezvisko</label>\n        <input\n          value={surname}\n          onChange={(e) => setSurname(e.target.value)}\n          className=\"\"\n          type=\"text\"\n        />\n\n        <label className=\"\">Adresa</label>\n        <input\n          value={address}\n          onChange={(e) => setAddress(e.target.value)}\n          className=\"\"\n          type=\"text\"\n        />\n\n        <label className=\"\">Popis</label>\n        <input\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          className=\"\"\n          type=\"text\"\n        />\n\n        <label className=\"\">Obrázok</label>\n        <input\n          className=\"\"\n          type=\"file\"\n          name=\"myImage\"\n          onChange={onImageChange}\n        />\n\n        {image && <img src={image} className=\"nahlad_obrazku\" alt=\"\" />}\n\n        <button onClick={addPodnet} className=\"pridat_button\">\n          Pridať\n        </button>\n      </div>\n\n      <h1 className=\"nadpis_zoznam\">Zoznam podnetov</h1>\n\n      <hr className=\"ciara\" />\n\n      <div className=\"drziak_podnet\">\n        {podnets.map((podnet, podnetIndex) => {\n          return (\n            <div className=\"podnet\">\n              <h1 className=\"nadpis_podnet\">\n                {\" \"}\n                {podnet.name} {podnet.surname} ({podnet.address}):{\" \"}\n              </h1>\n              <p className=\"podnet_text\"> {podnet.description} </p>\n\n              <img src={podnet.image} className=\"obrazok_podnet\" alt=\"\" />\n\n              <button\n                onClick={removePodnet(podnetIndex)}\n                className=\"vymazat_button\"\n              >\n                Vymazať\n              </button>\n\n              <hr className=\"ciara\" />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","import { render } from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}